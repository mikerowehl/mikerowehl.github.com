<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Miker]]></title>
  <link href="http://rowehl.com/atom.xml" rel="self"/>
  <link href="http://rowehl.com/"/>
  <updated>2013-11-01T21:05:04-07:00</updated>
  <id>http://rowehl.com/</id>
  <author>
    <name><![CDATA[Mike Rowehl]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Firefox OS with App Manager]]></title>
    <link href="http://rowehl.com/blog/2013/10/28/firefox-os-with-app-manager/"/>
    <updated>2013-10-28T10:46:00-07:00</updated>
    <id>http://rowehl.com/blog/2013/10/28/firefox-os-with-app-manager</id>
    <content type="html"><![CDATA[<p>One of the nice things about
<a href="http://rowehl.com/blog/2013/10/24/firefoxos-1-dot-2-on-zte-open/">getting FFOS 1.2 on my device</a>
is being able to use App Manager instead of the simulator plugin to do
development. Given that
<a href="https://hacks.mozilla.org/2013/10/introducing-the-firefox-os-app-manager/">the App Manager replaces the Simulator Dashboard</a>
in the newest versions of Firefox, it seems like the kind of thing developers
should have access to. So hopefully ZTE figures out a way to get a 1.2+
release on their developer phones.</p>

<p>Note however that the app manager is available in the Firefox 26 series, which
is <a href="http://www.mozilla.org/en-US/firefox/aurora/">current the pre-alpha release</a>.
You can install Aurora side by side with the current stable Firefox release
(that&#8217;s the default on OS X at least). The app manager is available without
having to install anything, but you&#8217;ll need to install the ADB helper to
connect to an actual device. Details are in the
<a href="https://developer.mozilla.org/en-US/docs/Mozilla/Firefox_OS/Using_the_App_Manager">using the app manager</a>
document. I&#8217;ve been testing it out primarily with my locally built FFOS 1.2 on
the ZTE Open (inari) device.</p>

<p>Now comes the hard part of trying to figure out what you can put on the
device to make sure everything is working before you dive too far into
hacking around on your own. You&#8217;ll probably run across things like
<a href="https://github.com/mozilla/firefoxos-quick-start">the Firefox OS Quick Start example</a>
and the <a href="https://github.com/mozilla/mortar">Mozilla templates for Open Web Apps</a>.
None of those seem to be working to generate something you can install on
a device (they work great for the simulator, running on the same machine as
your development tools). Seems like there haven&#8217;t been a ton of folks working
with physical devices yet.</p>

<p>This
<a href="https://github.com/robnyman/Firefox-OS-Boilerplate-App">Firefox OS boilerplate app</a>
serves as a fantastic starting point however. Just a clone and then
&#8220;Add Packaged App&#8221; in the app manager and you&#8217;ll be able to refresh and run
on the device. There&#8217;s some rough bits, like geolocation isn&#8217;t working within
the app on my device, and &#8220;Take picture&#8221; has some issues. However I can
&#8220;Pick image&#8221; and choose camera as the source and that works okay. And the
rest of the stuff like vibrate, ambient light, device orientation, and check
battery are all working.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[FirefoxOS 1.2 on ZTE Open]]></title>
    <link href="http://rowehl.com/blog/2013/10/24/firefoxos-1-dot-2-on-zte-open/"/>
    <updated>2013-10-24T18:06:00-07:00</updated>
    <id>http://rowehl.com/blog/2013/10/24/firefoxos-1-dot-2-on-zte-open</id>
    <content type="html"><![CDATA[<p>I picked up a <a href="http://www.engadget.com/2013/10/03/zte-open-review/">ZTE Open</a>
Firefox OS device a little while ago. Given that
<a href="https://marketplace.firefox.com/developers/dev_phone">developer hub</a> says
it&#8217;s a &#8220;powerful device aimed at developers and early adopters worldwide&#8221; I
figured it would be good for some hackery. I read the specs, so I knew that
&#8220;powerful&#8221; should be pretty suspect. I was surprised to find out that it&#8217;s not
really for developers, and increasingly doesn&#8217;t seem to be all that open.</p>

<p>When I first grabbed it I figured maybe I could use it to just get a feel for
FirefoxOS and the direction the teams were trying to push for. However, the
phone ships with a 1.0.0 version of the operating system and some major basic
features were missing to even use it for a day or two. For instance GMail
contact syncing shows up in FFOS 1.1 (I&#8217;m not a Facebook user, so syncing using
the one existing mechanism wasn&#8217;t an option). Since this was supposed to be
a developer phone for early adopters, I figured that would be easy to remedy.
Not so, there&#8217;s no official OS updates for the phone planned at all. Weird.</p>

<p>Okay, no problem, I&#8217;ll use it to just do a little poking around developing
using the Gecko/Gaia stack and getting a feel for it on real hardware. However,
trying to push an app from the simulator it never showed up on the phone.
Rebooted and it popped up. Turns out there&#8217;s a
<a href="https://bugzilla.mozilla.org/show_bug.cgi?id=842725">race condition bug in FFOS 1.0</a>
which really keeps it from being usable as a developer platform.
Of course the pages talking about it say you should &#8220;make sure you have the
latest version of Firefox OS on your devices&#8221;. Which we just established
isn&#8217;t possible for this developer device, at least not according to ZTE.
Well ain&#8217;t that just a kick in the crotch?</p>

<p>So of course I ended up doing what I said I wasn&#8217;t going to do, and dove
straight down the rabbithole of compiling my own recent version of Firefox OS
from source and getting it installed on my ZTE Open device. Turned out to be
way more of an involved process than I expected given that the device is named
the &#8220;ZTE Open&#8221;. I expected that to mean developer friendly. Together with the
Firefox site saying the device was aimed at developers, I didn&#8217;t see any
reason to second guess that assumption. Here&#8217;s the process I went through
though, which should get you going from an unboxing to running FFOS 1.2 on
your device. The process isn&#8217;t too horrible, but making sense of lots of the
existing posts out there and figuring out the right order for a fresh device
took some experimentation.</p>

<p>The first thing to do is apply the
<a href="http://www.ztedevices.com/support/smart_phone/b5a2981a-1714-4ac7-89e1-630e93e220f8.html?type=software">update from ZTE</a>.
This was one of the hardest parts to puzzle out for me. Turns out the firmware
on the model I had was old enough that it was failing to flash the images once
I had them built. There were folks posting that they had gotten certain parts
working, and it was failing for me and others who had recently purchased
devices. Turned out that the original firmware didn&#8217;t support fastboot, which
is one of the mechanisms for getting the code actually onto the device. That
V1.0.0B02 release from ZTE has instructions for how to load it using the stock
recovery image, and once it&#8217;s installed you&#8217;ll be able to use the simple tools
to get your code onto the device. Also nice, with the ZTE provided update.zip
on your SD card you can use recovery mode to get back to a working system if
you end up screwing up the system partition. Which I did dozens of times.</p>

<p>Once you have the ZTE update in make sure you have debugging turned on for
your phone. Go into Settings / Device Information / More Information /
Developer and flip on the Remote Debugging option if it isn&#8217;t on already.</p>

<p>Next, unfortunately, you&#8217;ll have to grab a binary image of the
<a href="http://sl.edujose.org/2013/10/adapted-boot-image-for-use-with-b2g.html">boot partition</a>
hacked up and ready to use. This is horrible, and it&#8217;s the other part that was
really a sticking point trying to figure out. As you&#8217;ll see later on, for some
reason the boot2gecko build for the inari device (which is the name you use
for building for the ZTE Open) doesn&#8217;t generate a boot.img. From what I can
tell it doesn&#8217;t even generate the parts necessary to pull together into a
boot.img. And as I found out through multiple tries, putting the system and
user partitions from a custom build together with the boot from a stock system
you&#8217;ll generally end up with the OS booting and the UI layers crashing
repeatedly. That&#8217;s what I got at least.</p>

<p>Once you&#8217;ve got that stuff the build is pretty much as described in the
<a href="https://developer.mozilla.org/en-US/docs/Mozilla/Firefox_OS/Firefox_OS_build_prerequisites">FirefoxOS build docs</a>.
I use an OS X system, but I did my build in a VMWare VM running Ubuntu 13.04.
The tools used to interact with the Firefox OS devices are the same as used
for Android development. And I&#8217;ve done that under a VM tons, so I was pretty
comfortable with that part of the setup. Plus being in a VM meant I could muck
with the stuff in the Linux install as much as I wanted. Below is the actual process I
ran through, getting all the tools in place, configuring, and building. This
assumes you&#8217;re starting from a completely fresh 13.04 install, you run through
the installer and then let it pull down any updates, then do this:</p>

<script src="https://gist.github.com/mikerowehl/7275342.js"></script>


<p>NOTE: I moved the set of commands to run off to a gist cause Octopress was
prettying up the quotes and making them cut/paste unfriendly.</p>

<p>And then you should have a FFOS 1.2 install runnable on your device. I tested
mine out with my TMobile SIM in the US: phone works, SMS works, data connection
works (though by default it was disabled on mine, just use the notification
pulldown and toggle the cellular data option right next to the wifi toggle).
Hopefully as the device and OS evolve this gets a lot easier and more developer
friendly. Needing to pull a binary boot image from someone else just to get a
fresh build onto a device, that&#8217;s not good. I was expecting FFOS development
to show up Android development in terms of encouraging developers to work with
the base system. Not the case so far.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[knife-block for Chef Testing]]></title>
    <link href="http://rowehl.com/blog/2013/09/19/knife-block-for-chef-testing/"/>
    <updated>2013-09-19T12:17:00-07:00</updated>
    <id>http://rowehl.com/blog/2013/09/19/knife-block-for-chef-testing</id>
    <content type="html"><![CDATA[<p>A few weeks ago <a href="https://github.com/nathenharvey">Nathen Harvey</a> was kind
enough to stop by and give us a critique of how we do Chef automated testing
and some workflow suggestions. We had been using chef-solo
to do some of the recipe development and automated testing, but all our real
deployments were done using chef-client. And the differences
between solo runs and chef-client runs kept biting us. We had seen the stuff
Lookout Mobile has done to
<a href="http://hackers.lookout.com/2012/04/cookout-at-lookout-with-chef/">run a VM for the chef server</a>
in addition to the node during testing. But that seemed like an awful lot of
overhead. Fortunately Nathen gave us the awesome hack of using different
organizations for the different developers of chef rules, different
organizations for CI, and then the production organization. That gives us
complete isolation of the different working areas, but still keeps setup
relatively simple. w00T!</p>

<p>His suggestion was to use
<a href="https://github.com/greenandsecure/knife-block">the knife-block plugin</a>
to make swapping around between organizations easier. Definitely an awesome
tool, and very useful. But we ran into a few issues because
knife-block uses a different method for finding it&#8217;s knife.rb file than the
knife command does. So I pushed up a
<a href="https://github.com/mikerowehl/knife-block">fork of the original knife-block code</a>
with a change to how it picks up the configuration location. This version uses
the Chef::Knife config loader to find the actual configuration being used,
and uses that directly. In the original version it borrowed a function from
Chef, but that function tried to find knife config by looking for a .chef
directory somewhere in the parent directories on the filesystem. The real
Chef config loader looking in a bunch of additional places.
So the result was that if you had your
config in ~/.chef and ran your knife block commands from your home dir it worked
fine, but if you cd into /tmp suddenly your knife block commands
would freak out.</p>

<p>Once I dug in and saw what was going on, I figured it would be pretty easy to
fix up. After looking at the Chef code it became obvious why the knife-block
stuff did things the way it did. I hate to have to monkey patch to get things
to work, but the change is actually pretty trivial. I ended up
<a href="https://github.com/mikerowehl/knife-block/blob/494b8c08a45c17c1335a97e4a6a6b08ecdc73c11/lib/chef/knife/block.rb">injecting a get_config_file method</a>
into Chef::Knife so that once I constructed a Knife object I could ask it for
the location of the chef config file. Now if knife itself works, I&#8217;m sure
knife-block will end up pulling config from the same location. Useful for when
I need to login to the CI server and poke around to do some debugging
(Bamboo stores the test files outside of the home directory of the bamboo
user in our configuration).</p>

<p>For the testing itself we use some Vagrantfiles with definitions of the
different server types we have. Knife-block provides a nice easy way for me
to test against an mrowehl organization, and then use a devops-test
organization for some automated validation, and finally swap to the prod
organization to push stuff up live. So of course I want to be able to use
the Vagrantfile when I&#8217;m testing locally and developing recipes, and use the
same Vagrantfile on the Bamboo server with the devops-test organization to
validate that everything is working. I didn&#8217;t want to have to go in and edit
the chef-client provisioner config to swap organizations though, and using
something like environment variables to drive it just seemed really ugly.
Fortunately we ran across
<a href="https://coderwall.com/p/dt1idw">this post about pulling vagrant chef-client config from knife.rb</a>
and ended up putting together
<a href="https://gist.github.com/mikerowehl/6631396">our Vagrantfiles so they automatically follow where knife-block is pointed</a>.
Together with the changes in the Vagrant 1.3 series releases to automatically
remove node and client from the server when you do a &#8216;vagrant destroy&#8217; it
makes for an awesome testing setup. Just use knife block to swap around to
different organizations and up/destroy your boxes as much as you want,
your wanton path of destruction just gets all swept up automatically behind
you.</p>

<p>With the vagrant config hackery in place it doesn&#8217;t matter what
organization we want to test against, the text
of the Vagrantfile can stay the same as long as knife is pointed to the right
place. That made it pretty trivial to put together a simple
<a href="https://gist.github.com/mikerowehl/6631010">wrapper Rakefile to clear and populate the organizations</a>.
With those wrappers all our Bamboo server has to do is:</p>

<ul>
<li>grab the latest from our chef-repo with git</li>
<li>&#8216;knife block use devops&#8217; to swap to our test organization</li>
<li>&#8216;rake delete_all&#8217; to clean out the test organization</li>
<li>&#8216;rake upload_all&#8217; to put all the new cookbooks in place</li>
<li>&#8216;vagrant up&#8217; for the actual test</li>
<li>and then a run always ending task to &#8216;vagrant destroy -f&#8217;</li>
</ul>


<p>Fortunately the vagrant up command returns the exit status of the chef-client
run as the status for the command, so picking up failures is pretty trivial.</p>

<p>Of course, this stuff isn&#8217;t perfect. The tests always run in our &#8216;dev&#8217;
environment, which has the cookbook versions unpinned. That&#8217;s how we can clean
out and reload the organization each time without it causing trouble. Of
course if you had pinned cookbook versions you would have to add in some logic
to make sure you could load the proper version each time you reload. But for
our current level of complexity, just knowing that the latest batch of changes
doesn&#8217;t completely break is an awesome start.</p>

<p>It&#8217;s not quite ready for a release yet, but I&#8217;ve also got
<a href="http://www.packer.io/">some Packer templates</a> which converge a node using
chef-client and export the Vagrant friendly box so I can distribute the VM.
Once I have them cleaned up a bit I&#8217;ll post those too.</p>

<p>Update: The change for knife-block to follow the same knife.rb lookup logic
as Chef has been
<a href="https://github.com/greenandsecure/knife-block/pull/10">merged into the main repo</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Scaling Technology]]></title>
    <link href="http://rowehl.com/blog/2013/07/14/scaling-technology/"/>
    <updated>2013-07-14T17:41:00-07:00</updated>
    <id>http://rowehl.com/blog/2013/07/14/scaling-technology</id>
    <content type="html"><![CDATA[<p>A few weeks ago Arte and Mario asked me to swing by to chat with folks participating in
<a href="http://momentum.mobilemonday.us/">the Momentum accelerator</a> to talk about
scaling technology. While we were talking I pointed folks to a few posts and videos of
talks I consider to be some of the root nodes of a lot of other conversations. I&#8217;m not
sure I&#8217;ve ever pulled this together before.</p>

<ul>
<li><a href="http://blip.tv/oreilly-velocity-conference/velocity-09-john-allspaw-10-deploys-per-day-dev-and-ops-cooperation-at-flickr-2297883">Allspaw/Hammond - 10+ Deploys Per Day</a></li>
<li><a href="http://www.slideshare.net/deimos/randy-shoup-ebays-architectural-principles">Randy Shoup - Ebay&#8217;s Architectural Principles</a></li>
<li><a href="http://akfpartners.com/techblog/2008/05/08/splitting-applications-or-services-for-scale/">AKF Partners - Splitting Applications or Services for Scale</a></li>
<li><a href="http://highscalability.com/">High Scalability</a></li>
<li><a href="http://techblog.netflix.com/">Netflix Tech Blog</a></li>
</ul>


<p>That Allspaw/Hammond presentation is the most primary in my opinion. It&#8217;s the talk
that lots of us consider to be the inflection point of the devops movement, when the
practice started to really gain visibility. What had previously been a random
collection of techniques we didn&#8217;t have a great way to refer to became &#8220;devops&#8221;.
There&#8217;s a ton of useful information in that presentation. Not just the overall
concepts of dev and ops working together with a different kind of coupling, but some
specific tools to make that happen like shared metrics, feature flags, and shipping
dark.</p>

<p>The presentation from Randy Shoup has also withstood the test of time fantastically
well. The four architectural principles are great top level items: partition
everything, async everywhere, automate everything, remember everything fails. And the
presentation from AKF Partners dives into a bunch more detail about how to partition
services so that you can just throw hardware at problems. That model also provides a
lot of the basis for most of the conversations I end up having about geographic
distribution of services (which actually sounds exactly like a discussion about how
to design the I/O layer of an operating system, you just swap terminology).</p>

<p>The High Scalability and Netflix blogs provide great concrete examples of what some
of the problems and solutions look like. Principles are great, but like always
there&#8217;s more than one way to do it. So it&#8217;s great to have some concrete examples to
poke through. Plus Netflix being one of the pioneers of the static AMI methodology
of infrastructure automation it makes their approaches particularly strongly
opinionated.</p>

<p>The platforms themselves have changed the level of abstraction you need to work at
when putting this stuff into practice. Thanks to MongoDB and Riak we don&#8217;t have to
wrapper tons of instances of MySQL or Postgres to make a datastore that scales
horizontally. And thanks to services like Elastic Beanstalk, Heroku, and EngineYard
we don&#8217;t have to pay as much attention to how to distribute load across multiple
application servers. But even though you can count on your platform to remove a
bunch of the details in some cases, it&#8217;s a good idea to understand the principles.
First of all cause it&#8217;s possible to misuse the platform and end up not
getting the full advantage you could. But also because platforms can only help out
so far. Eventually you need to crack open the abstractions and either continue
with an application optimized line of evolution, or figure out how to wrapper
additional layers of capability around what the base platform provide. In either
case at least being aware of the principles your underlying platforms are working
on will pay back hugely.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Consistent Test Methodology for Inconsistent Projects]]></title>
    <link href="http://rowehl.com/blog/2013/05/28/consistent-test-methodology-for-inconsistent-projects/"/>
    <updated>2013-05-28T23:43:00-07:00</updated>
    <id>http://rowehl.com/blog/2013/05/28/consistent-test-methodology-for-inconsistent-projects</id>
    <content type="html"><![CDATA[<p>How do you start introducing some testing if you have a huge group of existing
projects, for the most part all implemented using different languages and
technologies? That&#8217;s the problem I&#8217;ve been poking at recently. The first issue
is that none of the technology choices were made with testability in mind. And
I don&#8217;t want to have to go through and run a bunch of code refactoring and
reorganization just to start testing. I would much rather start testing, and
then start introducing changes to make things easier to test and to increase
the coverage. The second issue is that we&#8217;re pretty sure there are some major
architectural changes and redesigns coming in the short term. So to dig in and
harness up the guts of a bunch of systems we know will be changing really
shortly anyway also doesn&#8217;t seem like a fantastic idea. Plus some of the
changes are more about the operating environment than the code itself, and
a bunch of unit tests won&#8217;t necessarily help us figure out if the web services
break when we move from MySQL 5.5 to 5.6.</p>

<p>The most obvious and brute-force way would be to recreate the whole end-to-end
environment and create some system tests for it. I think that would be too
brute-force though. I would like our first step to provide some tools that
would be useful to developers and the infrastructure folks. A whole end-to-end
environment might be useful for infrastructure, but would be a burden for
development. Even if this were running up on AWS, imagine having to spin up
a dozen instances and wait for them to initialize just so you could test your
one change. And the system as a whole definitely wasn&#8217;t built with testability
at the granularity of the entire infrastructure in mind. So good luck being
able to hit even a small set of the conditions the running systems are
subjected to.</p>

<p>No, what we needed to start were a few automated acceptance tests at the
granularity of the individual architecture components. Fortunately, cause much
of the process before was run off manual QA there are collections of test
cases floating around for lots of the components. And there&#8217;s frequently even
a description on a wiki page of how to configure a QA environment for a given
component (for example how to setup a database, configure Tomcat, and install
and run a web service). So now it&#8217;s just a matter of being able to script all
that up.</p>

<p>Since I wanted these tests to be useful both for development time checks and
infrastructure validation that meant they needed to run on an environment as
close to production as possible. But setting up a bunch of testing
environments introduces a whole other set of problems potentially as large as
the set we&#8217;re trying to solve. Spinning up the instances in the cloud might
work, but also introduces a different level of complexity. I wanted
something that a developer could have available right in their project
checkout they could use to validate their work as they go along and ensure
there won&#8217;t be any surprises when trying to run in production. Fortunately,
that&#8217;s exactly what <a href="http://www.vagrantup.com/">Vagrant</a> is meant to provide.</p>

<p>With Vagrant and <a href="https://www.virtualbox.org/">VirtualBox</a> on a development
machine it&#8217;s easy to spawn a VM running the same version of CentOS we&#8217;re
running in production. The instructions for setting up a QA environment
become
<a href="http://docs.vagrantup.com/v2/provisioning/index.html">provisioning scripts</a>
for the Vagrant config, which automatically get run when the VM launches.
The automation for the test cases themselves or loading data need to be
handled on a case-by-case basis, but with the ability to sync files between
host system and VM and automatically configure port forwarding into the VM
it makes it much simpler to bundle everything into a single command.</p>

<p>Cause we&#8217;re testing at the same granularity at which these projects are
deployed, we don&#8217;t have to refactor the projects before we can
start automating some testing. The projects already have well defined input
and output points, which is how they communicate with the rest of the
infrastructure, so we just latch onto those. Now, admittedly, the service
contracts for lots of the projects are fuzzy at best. Cleaning those up is one
of our medium term goals. But at least now we can start with testing in place
and then start changing stuff.</p>

<p>And if the infrastructure folks want to try running on a different distro,
or using a different version of a package, they also now have the tools to
check changes without having to run things through QA.
Make the necessary changes on the VM and then run the script to make sure
nothing has broken.</p>

<p>For this to start looking like a proper continuous delivery test setup we
should be driving the setup of the VM using the same configuration as we use
in production, which is why we&#8217;re also working on swapping to a more robust
infrastructure automation system than we have currently. For example, Vagrant
allows Chef or Puppet for provisioning instead of using a shell script. And
instead of using the synced filesystem to move data back and forth, the system
under test should be deployed using the same tools and process as the deploy
to production. But at least there&#8217;s movement in the right direction now.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Why I Suck at Angel Investing, and My Plan]]></title>
    <link href="http://rowehl.com/blog/2013/03/09/why-i-suck-at-angel-investing/"/>
    <updated>2013-03-09T21:23:00-08:00</updated>
    <id>http://rowehl.com/blog/2013/03/09/why-i-suck-at-angel-investing</id>
    <content type="html"><![CDATA[<p>I&#8217;ve done a bunch of angel investing over the last few years. And I&#8217;ve decided
I&#8217;m no good at it. The market, so far, seems to agree with me. Most of the
investments I&#8217;ve done are nowhere, frequently not even making it to launch.
That&#8217;s okay actually, not a big deal.</p>

<p>What the realization has forced me to do is cycle back on why I was angel
investing in the first place. I really wanted to do it so that I could help
friends realize their dreams. There are tons of people I&#8217;ve worked with over
the years who have fantastic skills and often correspondingly focused vision.
That sounded like a great investment thesis to me, folks who I&#8217;ve worked with
directly.
And I figured that giving them
some money to help out when they were starting on a new effort would be a great
way to share in the adventure.</p>

<p>However, there&#8217;s a bunch of stuff I missed the first time around:</p>

<ul>
<li>I&#8217;m bad at filtering ideas. I think everything is a good idea. That seems to
just be a bias of exuberance and having been an operator myself for the last
20 years. I project how I would attack the problems, and assume if it&#8217;s
something I can execute on certainly other people can. In retrospect that was
dumb, and I should have realized this one in advance.</li>
<li>I thought I would be able to directly help out. I&#8217;ve been building businesses
and technology for 20 years, I normally have a lot to contribute. However,
once I&#8217;m an investor teams tend not to come back to me for help.
I think cause most of them only want to come back with good news, they&#8217;re
kinda embarrassed to come back to an investor for help. That&#8217;s just dumb on
their part. I use my investors for help all the time, and they&#8217;re always
supportive, encouraging, and effective. Trying to run success theatre is dumb.</li>
<li>Venture funded businesses, and the current crop of startups in particular,
are really focused on short term financial gain. There&#8217;s not really much
&#8220;realizing dreams&#8221;. Unless your dream is to flip a company to Google. So it&#8217;s
ended up being kinda boring. If it was even in there to begin with, vision
frequently takes a back seat. And the companies just randomly pivot over and
over, flailing around trying to find instant product market fit and 10x
compounding daily growth cause they think it&#8217;s rational to expect that. Of
course they never do.</li>
<li>At the levels I&#8217;ve been investing (normally very small stuff like $10k to
$25k, the occasional $50k) it just doesn&#8217;t shift the needle. Coupled with
folks not coming back for help: I&#8217;m not getting any leverage out of the
investment and the teams aren&#8217;t getting any leverage out of the money.</li>
</ul>


<p>So, of course, the real next question should be how do I fix it? I could just
give up on trying to make awesome things happen. But that&#8217;s not really my style.
I&#8217;ve also been tempted to dust off lots of stuff I learned from Churn Labs and
try to run a similar effort, with significant tweaks this time around. That
whole line of thinking is worth a post of its own actually.</p>

<p>Recently I had to do some legal work that required me to actually go through
and enumerate all my assets in one place. So the shares I have in companies
that I&#8217;ve invested in ended up side by side with the list of companies I have
shares from cause I&#8217;m advising them. And the difference was shocking. The folks
I spend a bit of time with every month, they&#8217;re rocking it. That says to me
there might be something to me being able to directly help out. Now correlation
is not causation, I&#8217;m fully aware. So it might just be that the folks who
aren&#8217;t asking me for money are predisposed to a working style that increases the
chance of success, and it really doesn&#8217;t have anything to do with me at all. But
right now it&#8217;s a working hypothesis at least, and I&#8217;m willing to test it.</p>

<p>There are actually a bunch of different methodologies I&#8217;ve been thinking about
to put that test into play. But then my current company got bought (which, by
the way, I&#8217;m using as an additional point in support of my hypothesis :-P), and
for once I&#8217;m finally enthusiastic about working with the new team for a good
chunk of time. So that severely cuts down on the plans I can realistically put
into action over the next few years.</p>

<p>That means if I want to keep involved it really needs to be as investor, but I
needed to figure out how to:</p>

<ul>
<li>Work on things that are going to change the world in a positive way, and that
me and the team will be proud of.</li>
<li>Make sure there&#8217;s a way to keep myself directly involved, so I can figure out
if I actually make a difference at all. I need to figure out a nice
scientific approach to determine this still.</li>
<li>Provide real leverage to the teams.</li>
</ul>


<p>There are tons of incubators and accelerators out there now, and I didn&#8217;t want
to be just another &#8220;me too&#8221; in a sea of mediocrity. Fortunately they tend to
really focus on different businesses than I would like to go after, so I&#8217;m
thinking I can do something that isn&#8217;t duplicative. There are tons and tons of
little companies spun up to try to exploit tiny gaps in existing markets, and
relatively few looking to open up new areas. In other words there aren&#8217;t too
many <a href="http://www.spacex.com/">SpaceX</a> style projects out there. And I would
like there to be.</p>

<p>My plan is to start filtering the projects I work
with using a completely different set of criteria going forward, to take a much
more active and direct role in the projects, and to start investing in the
$250k to $500k range instead. I&#8217;ve got one of these starting to come together
now, and a few other discussions with folks about the overall model. I think
the right model for myself is actually to keep this to one project at a time,
just to keep myself and the team focused. So I&#8217;m probably going to also start
being a lot more low volume than I have been in the past.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Use of Time]]></title>
    <link href="http://rowehl.com/blog/2013/02/06/use-of-time/"/>
    <updated>2013-02-06T12:48:00-08:00</updated>
    <id>http://rowehl.com/blog/2013/02/06/use-of-time</id>
    <content type="html"><![CDATA[<p>I love the idea behind social media services, helping to connect people and
strengthen relationships. However I don&#8217;t think most are actually fulfilling
on that vision. Sure, you can stay connected with friends. But your goals and
the goals of the social service itself frequently aren&#8217;t aligned. The desire
of social media services to drive the metrics they want based on your
connections to friends and family have resulted in systems that
prey on base urges. The result is systems that drive themselves off addiction
loops. In the end they&#8217;re like overeating or
smoking, bad habits. And I assume most people will look to weed out those
behaviors in the interest of their overall health. That&#8217;s my view at least, so
I took the plunge and deleted my Facebook account about a year ago.</p>

<p>At about the same time I decided to crank down a lot of my tech news
consumption, and filter down the folks I follow on Twitter to people who
regularly post things that are uniquely amusing or valuable. I had realized
what I was really trying to do was:</p>

<ul>
<li>make sure I had a good spread of new info coming in to keep generally informed</li>
<li>keep on top of what was going on in my industry</li>
</ul>


<p>So I focused on directly solving those problems instead of having
someone else try to correct for them by proxy. The first part was
kicking back up my long-form reading habit, I started downloading and
consuming lots of Kindle books. When we were working on Churn Labs I wanted to
learn more about places that created long periods with high levels of
innovation. In the info I was finding online I commonly came across the same
examples over and over. Places like Florence during the period of the Medici
family, or Apple, or Corning. But most of those posts online referenced
books for details. In following up the references and just trying to get some
details I picked up a few books and read them through.</p>

<p>At the time it had been a while since I sat down and read a book front to back
that wasn&#8217;t either sci-fi or highly technical. I found that for the purposes
of &#8220;researching&#8221; something, trying to dig into a new topic and understanding
it well enough to be able to make a mental framework and form personal
opinions, I was getting a lot more out of just reading long-form writing.
When it comes to picking up a new subject most online resources don&#8217;t do a
great job.
I think that&#8217;s why there&#8217;s so much attention right now
being thrown into &#8220;online learning.&#8221; The Internet is a fantastic way to
keep up to date with a topic you already understand. But it&#8217;s generally falling
flat when it comes to getting up to speed with something new. Fortunately for
me I pick things up relatively well in written form, and I&#8217;m pretty good at
filling in practical experience on my own. So when I hit something new,
sometimes I&#8217;ll follow up the cursory Wikipedia overview with a book if the
topic seems interesting enough. It can get
to be an expensive habit, but I&#8217;m finding it to be well worth it.
Hopefully soon all these education startups will make free resources I can use
instead, but for now I&#8217;m sticking to the books.</p>

<p>Listening to podcasts has also helped a good deal with getting an overview.
A bunch of the topics I&#8217;m interesting in following at a high level. I don&#8217;t
have the background to follow all the details of new info, but I like to at
least keep informed about major advances in science or engineering. Audio
format delivery seems to be great for that. Lots of the podcasters keep things
high level, I assume cause that&#8217;s best suited to the medium. So
adding just a few shows like the Economist and Science Friday has made me feel
like I&#8217;m pretty well on top of all the stuff I really care about. And I just
use an app (Stitcher on Android for me) so I can listen to the shows while I
walk to/from the train station. Fills up time that wasn&#8217;t really being well
utilized before.</p>

<p>Then I had to figure out how to keep up with the details of the industry
I&#8217;m working in. Or at least I thought I had to. Turns out that the generic
information sources plus directly operating in the industry was already
feeding me more than enough data. I lost a lot of noise by not following the
tech industry coverage. And I figured keeping on top of daily events was
necessary for conversations with other folks in the industry, otherwise you
seem ignorant when someone asks you about a hot topic.
But I found that with the noise gone I had stronger
opinions and better judgment anyway, and the discussions I had were actually
higher quality. Probably cause I had spent more time exploring and
validating my own viewpoint, so I had a lot more to contribute to
conversations.</p>

<p>Every now and again, there&#8217;s something that&#8217;s absolutely essential for me to
catch quickly. What I&#8217;m finding is that normally someone will forward it
to me. Usually to get my opinion on it.
And I find that cause I&#8217;m consuming things outside the channels most
folks pick through, I can serve that same role for others. Really, that&#8217;s my
&#8220;social network&#8221; doing what I originally hoped it would do. Turns out the
social tools were standing in the way.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Resurrection]]></title>
    <link href="http://rowehl.com/blog/2013/02/04/resurrection/"/>
    <updated>2013-02-04T23:29:00-08:00</updated>
    <id>http://rowehl.com/blog/2013/02/04/resurrection</id>
    <content type="html"><![CDATA[<p>This blog has been dormant for a long time, but I&#8217;ve decided to start it back
up. I created the site cause I wanted a Wordpress install
I could test my PalmOS based mobile blogging client against. But once I had
the site
up and running I started tossing all sorts of random stuff in. Everything from
my own thoughts on <a href="http://rowehl.com/blog/2006/04/02/high-availability-nfs/">scalability</a>
to summaries of events
about <a href="http://rowehl.com/blog/2005/04/15/make-almost-anything/">the FabLab</a>.
However, after a few years of tossing all sorts of random stuff in here I
started to really focus on mobile, so I
created a mobile specific site called
<a href="http://thisismobility.com/blog">This is Mobility</a> so that I wouldn&#8217;t have
everything all jumbled together. Then with
so much interesting stuff happening in mobile this blog eventually fell into
disuse. And it&#8217;s remained unused since 2006.</p>

<p>Recently I&#8217;ve felt getting a little more randomness going again is a good
idea. And I&#8217;m really happy I kept all these blog posts around to read,
so I could get a peek back into my mind 10 years ago and remind myself what it
was like. When I started reading through these posts I figured that&#8217;s all I
would do, read and then put it aside. But I realized how different my
thought process was a few years ago. And not just cause I was young and
naive, but because I was looking at things without the encumbrance of much
bias. &#8221;<a href="http://en.wikipedia.org/wiki/Shoshin">Beginner&#8217;s mind</a>&#8221; is probably
the best term for it. That beginners mind
decided that Linux and open source were a good bet for building online
services. And that beginners mind decided that homesteading a spot in the
mobile world was a good idea back in 2003. I wouldn&#8217;t pass on getting a bit
more of that beginners mind, and it seemed like writing
here again could help with that process. With the site being 10 years
old, it seemed somehow proper to bring it back.</p>

<p>Of course, some updating needed to be done. While I love Wordpress for
some things, I&#8217;m also getting tired of it getting exploited and abused cause I
pay so little attention to it. It&#8217;s my own fault for not updating it, but I
really like the option of swapping to something I don&#8217;t need to pay attention
to instead of modifying my behavior.  So I swapped over to using
<a href="http://octopress.org/">Octopress</a>,
which
uses post files written in markdown to generate the site as a static set of
pages (hat tip to <a href="http://fusion94.org/">Tony</a> for the suggestion).
Thanks to a fantastic set of scripts called
<a href="https://github.com/thomasf/exitwp">exitwp</a> I was able to move
an export of my Wordpress data right into Octopress friendly format.
Yay! That should be the end of Viagra and Levitra ads randomly
appearing at the end of my posts. And as a bonus I can publish the whole thing
through Github Pages, and store the source in Github. Which I was doing with
the rowehl.com site anyway, but had to take special care to backup the
database to keep blog posts safe. Now it&#8217;s all just one repo.
And cause the pages are hosted directly off Github, when I crash
my personal server doing Linux distro hackery I don&#8217;t take down rowehl.com.</p>

<p>Also nice about Octopress - the default profile takes a responsive
approach. So now my personal blog looks better on mobile than my mobile
focused blog. With the way the Octopress templates and plugins are
structured it was pretty easy to make some style changes, swap in some fonts
that make the site look a little less amateur hour. I got rid of commenting
all together and have added some share buttons instead, cause that&#8217;s how the
world works now. Everyone already has their own place to speak, so why put
their thoughts into my database? And again, once less thing for me to worry
about.</p>

<p>In the end, actually not much effort at all. And I&#8217;m really happy with how it
works. Now I have a place to write about all that other
not-specifically-mobile stuff like cool bits of open source, programming,
emerging technologies, and startups. And to remind myself just how far things
have come, I dug up and posted the
<a href="https://github.com/mikerowehl/vagablog">source code</a> to the Treo650 blogging
app that kicked this whole thing off 10 years ago.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu - Sun JDK Graphical Install Only?]]></title>
    <link href="http://rowehl.com/blog/2006/09/20/ubuntu-sun-jdk-graphical-install-only/"/>
    <updated>2006-09-20T05:01:18-07:00</updated>
    <id>http://rowehl.com/blog/2006/09/20/ubuntu-sun-jdk-graphical-install-only</id>
    <content type="html"><![CDATA[<p>I was just installing the Sun JDK on my workstation at the office, and when I tried the obvious: apt-get install sun-java5-bin got an error message about not being able to find a license. Interesting, thought I, &#8220;there must be a higher level package wrappering this whole thing that deposits a license file somewhere for the apt-get process to pick up&#8221;. A bunch  of searching around in the repository listings turned up no java license related packages.</p>

<p>You find where <a href="http://www.aspma.com/downloads/">download mp3 music</a> on player, You need <a href="http://www.aspma.com/download/">mp3 music download</a> from online mp3 archive</p>

<p>So I did a search and ended up with <a href="https://jdk-distros.dev.java.net/ubuntu.html">this description of installing Java under Ubuntu</a> which says pretty much what I was doing, except using the graphical package manager instead. &#8220;How lame would it be if you needed to install Java using the Synaptic package manager instead of the command line?&#8221; Not lame enough to discourage doing it apparently. If you&#8217;re looking to install Java under Ubuntu you might have to use the package manager instead of apt-get in order to do it. Next time you see Java people throw rotten fruit at them to let them know how you feel about that.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Two Blue Pills with a Whiskey Back Please]]></title>
    <link href="http://rowehl.com/blog/2006/09/18/two-blue-pills-with-a-whiskey-back-please/"/>
    <updated>2006-09-18T16:21:23-07:00</updated>
    <id>http://rowehl.com/blog/2006/09/18/two-blue-pills-with-a-whiskey-back-please</id>
    <content type="html"><![CDATA[<p>The surreal thought for today: <a href="http://en.wikipedia.org/wiki/Laurence_Fishburne">Lawrence Fishburne</a>, Morpheus from The Matrix, was <a href="http://en.wikipedia.org/wiki/Cowboy_Curtis">Cowboy Curtis</a> on Pee Wee&#8217;s Playhouse. I was wondering why Pee Wee ended up in the Adult Swim lineup. I get it now. Joke&#8217;s over. You can make it stop.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SpellBound Firefox Plugin, Dev Version]]></title>
    <link href="http://rowehl.com/blog/2006/09/18/spellbound-firefox-plugin-dev-version/"/>
    <updated>2006-09-18T06:16:12-07:00</updated>
    <id>http://rowehl.com/blog/2006/09/18/spellbound-firefox-plugin-dev-version</id>
    <content type="html"><![CDATA[<p>Apparently Firefox 2 has inline spellcheck right out of the box.  Werd, I&#8217;m looking forward to it.  However, my Ubuntu systems still have Firefox 1.5.x and I don&#8217;t want to start mucking around now that I&#8217;ve just started accepting I don&#8217;t need to build everything by hand. Start pulling on that thread again and whole thing comes apart!</p>

<p>Normally I use a plugin for spell checking, but it stopped working a few updates ago. Firefox or the extension claims that they are no longer friends. So I was very happy to find the <a href="http://forums.mozillazine.org/viewtopic.php?t=351130">development preview</a> of SpellBound, which not only works with the current Firefox releases under Ubuntu, but does inline spellcheck. Double w00t to that one.  I have it installed at home, as long as it doesn&#8217;t cause any problems I&#8217;ll put it in here at work too.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Subversion Book]]></title>
    <link href="http://rowehl.com/blog/2006/09/15/subversion-book/"/>
    <updated>2006-09-15T02:46:37-07:00</updated>
    <id>http://rowehl.com/blog/2006/09/15/subversion-book</id>
    <content type="html"><![CDATA[<p>I&#8217;ve been giving myself a svn refresher so that we can move over to it, and I hit this in the <a href="http://svnbook.red-bean.com/nightly/en/svn.reposadmin.maint.html">maintenance tools documentation page</a> and it made me laugh out loud:</p>

<blockquote><p>This output is human-readable, meaning items like the datestamp are displayed using a textual representation instead of something more obscure (such as the number of nanoseconds since the Tasty Freeze guy drove by).</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[You've Stayed Up Too Late When]]></title>
    <link href="http://rowehl.com/blog/2006/09/09/youve-stayed-up-too-late-when/"/>
    <updated>2006-09-09T21:15:47-07:00</updated>
    <id>http://rowehl.com/blog/2006/09/09/youve-stayed-up-too-late-when</id>
    <content type="html"><![CDATA[<p>You know you&#8217;ve acidentally let your bedtime slip too close to sunrise when you&#8217;re flipping through the onscreen TV guide and MTV actually lists &#8220;Music Videos&#8221; as currently showing. No need to look at the time, when a thing like that happens you know that either the sun is about to come up or you&#8217;ve somehow ended up in the 80&#8217;s.  Flock of Seagulls anyone?  Don&#8217;t laugh, they&#8217;re <a href="http://www.oz.net/~davester/AFOS/">on tour</a>. On second thought, go ahead and laugh.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hilton Ninja]]></title>
    <link href="http://rowehl.com/blog/2006/09/06/hilton-ninja/"/>
    <updated>2006-09-06T02:25:19-07:00</updated>
    <id>http://rowehl.com/blog/2006/09/06/hilton-ninja</id>
    <content type="html"><![CDATA[<p><a href="http://www.ninjastrikeforce.com/?p=100">Paris Hilton has been named an honorary member of the CDC Ninja Strike Force</a>.  A very high honor indeed. No word yet on wether she&#8217;ll also get the ability to blow shit up with heat rays from her eyes, like the other Ninja Strike Force members are able to do. We know she&#8217;s definitely got the backstabbing down pat though.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HOPE Six Audio Online]]></title>
    <link href="http://rowehl.com/blog/2006/08/25/hope-six-audio-online/"/>
    <updated>2006-08-25T02:57:27-07:00</updated>
    <id>http://rowehl.com/blog/2006/08/25/hope-six-audio-online</id>
    <content type="html"><![CDATA[<p>The full <a href="http://www.hopenumbersix.net/speakers.html">set of audio from the HOPE six conference</a> is online now. The conf happened just before DEFCON and I hear it has some fantastic stuff that didn&#8217;t show up in Vegas. Download and share!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[http_load for Request Replay]]></title>
    <link href="http://rowehl.com/blog/2006/08/23/http_load-for-request-replay/"/>
    <updated>2006-08-23T16:05:49-07:00</updated>
    <id>http://rowehl.com/blog/2006/08/23/http_load-for-request-replay</id>
    <content type="html"><![CDATA[<p>The <a href="http://talks.php.net/show/oscon06/0">presentation that Rasmus gave at OSCON</a> this year seems to have kicked some ass. I missed the conf, but got a bunch of interesting info from the slides. In particular I hadn&#8217;t used <a href="http://www.acme.com/software/http_load/">http_load</a> before. Part of what I&#8217;ve been doing at AdMob is taking a look at performance and scaling, so that was a great find. It&#8217;s exactly the set of controls and measurements I normally start out with, and it really does run very efficiently in terms of not loading down the system that http_load is running on.</p>

<p>Just about the only thing that didn&#8217;t work the way I wanted was the random selection from the url list file. I wanted to replay a set of traffic in order, so I <a href="http://www.rowehl.com/blog/wp-content/uploads/2006/08/http_load-miker-01patch.txt">hacked up an -orderedurls option</a> to select from the url list sequentially (repeating the list once you get to the end) instead of randomly choosing. Reading the whole file in and parsing it probably isn&#8217;t the way to go for this particular usage, so I&#8217;ll have to clean it up when the traffic segments I&#8217;m playing get into the millions instead of just the tens of thousands. But it works great for now.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux Lappy]]></title>
    <link href="http://rowehl.com/blog/2006/08/17/linux-lappy/"/>
    <updated>2006-08-17T23:23:23-07:00</updated>
    <id>http://rowehl.com/blog/2006/08/17/linux-lappy</id>
    <content type="html"><![CDATA[<p>It&#8217;s just about New Laptop Time. Not quite, but almost. Being a Linux only user it&#8217;s always an adventure trying to figure out what hardware to get. Hardware support has definitely gotten better under Linux, but figuring out what actually lives inside the system you&#8217;re thinking about picking up at deep discount from Office Max certainly has not. And I&#8217;m not a dual-booter either. I don&#8217;t have Windows to fall back on should something not work on my laptop. I take a scorched earth approach to Windows on my hardware, and generally wipe and repave the whole thing. Especially if it&#8217;s my personal laptop, which is what I plan for this to be.</p>

<p>Currently I&#8217;m leaning very heavily toward <a href="http://www.thinkwiki.org/wiki/Category:X41_Tablet">the Thinkpad X41 tablet</a>. It looks like there&#8217;s good X support for a bunch of stuff that&#8217;s traditionally a pain in the ass under Linux. Screen rotation seems to be working (without restarting X, thank god), the input driver for the touchscreen, power management (including frequency scaling), and wireless using ipw2200. Anyone out there with an X41 tried Linux and care to toss in some comments before I pick one of the things up? It&#8217;s hard to tell from wiki postings just how painful is it to get the thing actually setup, and there&#8217;s always the chance that the instructions on the wiki are wrong or incomplete.</p>

<p>On a very much related note, anyone know a good shop in the San Francisco Bay Area that could come up with some Pimp My Ride style dashboard mounting and wiring hookups for my car?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ZeroOne San Jose Art Festival]]></title>
    <link href="http://rowehl.com/blog/2006/08/06/zeroone-san-jose-art-festival/"/>
    <updated>2006-08-06T23:29:07-07:00</updated>
    <id>http://rowehl.com/blog/2006/08/06/zeroone-san-jose-art-festival</id>
    <content type="html"><![CDATA[<p>This week (August 7th to 13th 2006) is the <a href="http://www.01sj.org/">ZeroOne Arts Festival in San Jose</a>. There was a <a href="http://www.futuresalon.org/2005/02/art_on_the_edge.html">great presentation at Future Salon by one of the ZeroOne staff members</a> where he tossed out a dizzying number of art projects that blend in technology in tantalizing ways. And if the interesting art projects weren&#8217;t enough to get you down there on their own, on Friday there&#8217;s a <a href="http://01sj.org/content/view/217/52/">Survival Research Labs</a> exhibition:</p>

<blockquote><p>&#8230;it’s monster machine, meets hovercraft, meets huge sculptural creatures, meets fire.</p></blockquote>

<p>What better way to spend a Friday night? I have just one question.. tickets through Ticketmaster?  Is that part of the tongue in cheek techno-social commentary? That despite the rapid advance of technology in general the only way to throw a huge ticketed real world event is to use Ticketmaster? We&#8217;ll have to work on a project for the next one that fixes that issue.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A Diet of Monkey Chow]]></title>
    <link href="http://rowehl.com/blog/2006/06/06/a-diet-of-monkey-chow/"/>
    <updated>2006-06-06T06:06:28-07:00</updated>
    <id>http://rowehl.com/blog/2006/06/06/a-diet-of-monkey-chow</id>
    <content type="html"><![CDATA[<p>This is pure genius! I&#8217;m so disappointed I didn&#8217;t think of it first. A guy trying to <a href="http://www.angryman.ca/monkey.html">live on a diet of pelletized monkey food</a>. FANTASTIC! If it works and he doesn&#8217;t die I&#8217;m definitely doing it. If he does die&#8230; I give myself about a 50-50 chance of still trying it. I should start a run of packaging for the new <a href="http://en.wikipedia.org/wiki/Bachelor_Chow#Bachelor_Chow">Futurama style &#8220;Bachelor Chow&#8221;</a> product just in case. I&#8217;ll probably have to wait a while to add flavor however.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A Quarter of a Million Spam Messages]]></title>
    <link href="http://rowehl.com/blog/2006/06/05/a-quarter-of-a-million-spam-messages/"/>
    <updated>2006-06-05T00:00:52-07:00</updated>
    <id>http://rowehl.com/blog/2006/06/05/a-quarter-of-a-million-spam-messages</id>
    <content type="html"><![CDATA[<p>I&#8217;m at almost a quarter of a million spam messages (249,744 to be precise, by the time I post this it should be more than 250 thousand) caught by <a href="http://akismet.com/">Akismet</a> so far. I <a href="http://www.rowehl.com/blog/?p=605">turned Akismet on in January of this year</a>. That&#8217;s more than 50,000 spam messages a month. According to the Akismet site 92% of the comments it sees are spam.</p>

<p>The problem is very unevenly distributed however. I have a few other blogs out there, and they tend to get more like a few hundred spam messages a month. I just wanted to point that out given the degree of blowup I see when things happen like <a href="http://announcements.engadget.com/2006/05/30/comments-switched-off/">someone has to turn off comments for a while</a>. The spam problem is not uniformly distributed, just because you get a managable ammount of spam comments that doesn&#8217;t mean someone who blogs about just about the same stuff isn&#8217;t getting hundreds of times more.</p>
]]></content>
  </entry>
  
</feed>
