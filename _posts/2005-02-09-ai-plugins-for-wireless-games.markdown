---
comments: true
date: 2005-02-09 07:25:19
layout: post
slug: ai-plugins-for-wireless-games
title: Plugins for Wireless Games
wordpress_id: 408
categories:
- Mobile Computing
---

I'm just catching up on some posts I've had sitting around as drafts (there are a lot of them actually).  I saw [this article](http://www.smartmobs.com/archive/2005/01/31/viral_handheld_.html) about Infected, a wireless game for Playstation Portable that has some viral dispersion features. That got me thinking about a whole bunch of different things, mostly around artificial life, the suitability of a wireless network to simulate a resource constrained environment for competition, and the modeling of distance in genetic programming. However, I realized the more fundamental question here might be how hackable are these interfaces? Could I, a normal unlicensed Linux developer with a decent background in wireless interfaces, write a program that ran on a Linux system and interacted with a Playstation Portable game? Could this be used to write plugins and enhancements for the games in the same way that people used to [hack the description files for Doom](http://members.lycos.co.uk/doomwads/tc.php)? I think it's just an 802.11 interface, so it would be technically possible. But are the protocols closed off to allow only PSP to PSP communication? And how about the game data, protected or open?

The wireless interface presents an additional means of access to the game console that circumvents the traditional problems with getting content onto the device. Given that the "razor blade" model applies to most gaming consoles, that the unit itself is pretty much given away so that money can be made on the games, I'm not sure if incentives are aligned right for something like this. That's supposed to be one of the great aspects of the taco (Nokia N-Gage), ability for just about anyone to easily deliver new games. For most gaming consoles the developers have to burn CDs or DVDs in proprietary formats or get their games blown into ROMs and put into special cartridges. Wireless interface, either with existing games or as a means of providing new games, allows the hacker (by which I mean curious and motivated expert user capable of extending and transforming the system) a lower barrier to entry for experimenting with your system. Hacker ecosystems like this are good for systems as a whole. Once a group of your users sees your products as something they don't have to just accept "as is" they provide you with a completely different kind of feedback. If some of the expert users are able to service their own needs they can sometimes show you directions and evolutions that it would be difficult or impossible to reach on your own. If the Playstation Portable games don't allow this kind of extension, is there a gaming system that does? How about flash cartridges that could be loaded over the air? These systems seem to be able to write game state. Does that go to the cartridge or to storage on the unit? Does anyone have a pure software SDK for their console? Hack the game together on a PC using an emulator or simulator, compile for the console target, load over the air onto flash cartridges, and then be able to distribute a version to beta testers they can use with their existing systems? It just sounds dirty and subversive. I would love to be able to do it.
