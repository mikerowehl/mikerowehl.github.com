---
comments: true
date: 2004-01-30 14:50:01
layout: post
slug: being-a-self-employed-geek
title: Being a Self Employed Geek
wordpress_id: 142
categories:
- General
---

A recent string of articles and conversations have left me considering the tension between running a business and being a techno weenie. It's a topic that other people have discussed before, but it's something that probably has more general applicability than it seems to be given credit for. The point that really drove it home for me was [an article in strategy+business about what business strategists can learn from existential philosophers](http://www.strategy-business.com/press/article/03405?pg=all) (free registration required). The article touches on issues like how to carry out planning when it seems like more changes than remains the same from one iteration to the next.  If there are very few known (or even guessable) quantities, how can one form a realistic plan for action? Excellent points in general. 

What I realized in reading it was that perhaps overall business planning is getting more like technical project planning. At almost every business I've been at in the last dozen years it was true that "change is the only constant". Every day is a struggle to try to take in the new stuff that's been going on out in the rest of the world, and still try to have the time to work on the project at hand in some meaningful way. It's always been a delicate balancing act between following trends too closely and getting no work done, or ignoring the world at large and risking falling into obsolescence before the project even finishes. I used to think that this was partially a fault with the technical economy in general. I thought that the rate of innovation during the bubble was disproportionate to the real gains presented by the technologies. I figured once there weren't lots of overfunded companies working daily to push the edge out further and further that the rate of change would calm down somewhat. I really missed the boat on that one, I admit it. If anything the rate of change has actually sped up, at least with respect to the types of technologies that I work with. There are lots of reasons why (latent talent with free time, reduced budgets forcing fierce competition, etc), but the important point is that this hyperactive rate of change isn't something that seems to be an affliction of high tech, it just seems to have hit there early on. Now apparently it's seeping out into other areas as well.

So what does this mean for the self-employed geek gun-for-hire? If you're still in the game it probably means that you've learned innately how to deal with the issue of change. You've figured out how to balance between spending all your time reading about new Java technologies and actually getting that new server application up and running, or you've learned how to navigate the new Linux kernel releases that seem to come out every day and still maintain a working version for your company. The bad news is that the insanity is probably never going to stop, you are going to have to keep on your toes almost definitely (it's one of the few things that does seem to be predictable). The good news is that the abilities you learned while finding the right stride in your technical work are talents that can now be reapplied to a broader base. As business in general gets to be less and less of finite science the more use there will be for those who understand surfing on the seas of change. We already understand the daily grind of looking at the definite output from test cases and dubious reports about the newest set of widgets which should solve every development problem automatically at the press of a button. Sitting on the fence between sales numbers and wildly varying market projections seems almost second nature.

That's the overall outlook however, and I want to spend just a bit more time talking about the application of these principles to the self employed consultant or independent entrepreneur. The first issue is not to be concerned with doing things "the right way". Like the Perl programmers love to say, There's More Than One Way To Do It. The right way always changes depending on where you happen to be standing and what direction you're looking in. The important issue is to retain a somewhat clear vision of your direction. This doesn't mean that you can ignore the markets all together, it just means there are almost an infinite number of paths to success. The details of how to go down each path are different, you will have to apply sound tactics, but in terms of picking out a strategy pick the one that makes the most sense TO YOU. After that you should find that applying the effort necessary to fulfill that strategy is much easier that trying to deliver on something which is at odds with your innate sense.

Once you figure out what that direction might be, make sure that you keep it in mind when planning what to do and how to do it. Chances are when you do technical work you don't implement every single bit of technology just because you can. There isn't a reason to build in Jini support for most web sites, although it technically could be done. The same kind of discrimination should be applied to non-technical issues as well. There are some things that just aren't worth doing. Not because they're inherently worthless, but because they don't make sense given what you happen to be working on today. It might make sense tomorrow however, so you don't get to write it off completely. This area of tension seems to be a constant, it's always a struggle to filter out enough that you can avoid "analysis paralysis" but not so much that you're not reactive to changes. This is an issue that exists for every industry and companies of every size. I admit that I've only recently really explored many of the issues stemming from this duality. When I used to do mostly technical work I thought it was a problem that could be solved if someone somewhere would just take the time to figure it out. I believe more and more that this isn't the case. However, I have learned from my experience, so I'm not going to be binary about this. I'm not going to say that solving the issue is impossible and that you have to just accept it. It just seems to be intractable today. ;-)

Paying attention to the overall package you're offering is extremely important as well. I know the dot.com boom left a lot of us with a bad taste in our mouths when it comes to issues like marketing and branding. Innumerable tech companies with great presentation and no substance have given an unwarranted bad name to a lot of good ideas. But I think the concept of providing an overall experience rather than just a commodity service is more relevant than ever. Companies have no reason to pay a high consulting fee for someone to bang out some run of the mill PHP or shell code. That's work that can be delivered just as well by someone with a smaller amount of niche experience or a narrow focus on a specific technology, for correspondingly lower wages. However there is still room for someone to bring their years of industry experience to bear on planning and integrating the proposed solution seamlessly into the overall business. It means not spending all your time sitting in front of the keyboard. It means more time talking about the projects you've done in the past and how they relate to the situation at hand, and what possible new issues there might be. In business terms this is called moving up the value chain. It's a very basic principle from what I understand. And it implies is that if you do actually have a high value good/service then it doesn't make sense to compete with someone else on price for a lower valued good or service. Simply move to a position where you're better suited to take advantage of the high value skills you have. Some people give the guideline of moving as close as possible to "the place where value is created". That's a phrase that has helped me understand how it relates to what I do and how to judge it, so I'm passing it along. If after considering what those high value skills might be, you find that you don't have any, you better get out there and get some pretty quick.

So that's my advice for myself for the day. TMTOWTDI, accept ambiguity and strive to do something in spite of it, and do pay attention to rounding out your overall philosophy about the way that you work and what exactly it is that you do. Now I'm off to do some of that aforementioned value creation.
